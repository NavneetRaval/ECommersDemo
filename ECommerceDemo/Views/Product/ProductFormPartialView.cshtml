@model ECommerceDemo.Models.ProductModel
@using ECommerceDemo.Utils

@{
    Layout = null;
}

@using (Html.BeginForm("SaveProduct", "Product", FormMethod.Post, new { @class = "form-horizontal", id = "ProductForm" }))
{
    @Html.AntiForgeryToken()

<div class="form-horizontal">

    @Html.ValidationSummary(true, "", new { @class = "text-danger" })


    <div class="form-group">
        @Html.LabelFor(model => model.ProdName, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.ProdName, new { htmlAttributes = new { @class = "form-control" } })
            @Html.HiddenFor(x => x.ProductId)
            @Html.ValidationMessageFor(model => model.ProdName, "", new { @class = "text-danger" })
        </div>
    </div>
    <div class="form-group">
        @Html.LabelFor(model => model.ProdDescription, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.ProdDescription, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.ProdDescription, "", new { @class = "text-danger" })
        </div>
    </div>
    <div class="form-group">
        @Html.LabelFor(model => model.ProdCatId, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">

            @Html.DropDownListFor(x => x.ProdCatId, Model.lstProductCategory, new { @class = "form-control" })
            @Html.ValidationMessageFor(x => x.ProdCatId, "", new { @class = "text-danger" })
        </div>
    </div>
    <div id="categoryAttribute">
        @if (Model.lstProductAttribute != null)
        {
            for (int i = 0; i < Model.lstProductAttribute.Count; i++)
            {
                <div class="form-group">
                    <label class="control-label col-md-2">@Model.lstProductAttribute[i].AttributeName</label>
                    <div class="col-md-10">
                        @Html.HiddenFor(modelItem => Model.lstProductAttribute[i].AttributeId)
                        @Html.HiddenFor(modelItem => Model.lstProductAttribute[i].ProdCatId)
                        @Html.HiddenFor(modelItem => Model.lstProductAttribute[i].AttributeName)
                        @Html.EditorFor(modelItem => Model.lstProductAttribute[i].AttributeValue, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(modelItem => Model.lstProductAttribute[i].AttributeValue, "", new { @class = "text-danger" })
                    </div>
                </div>
            }
        }
    </div>






</div>
}


